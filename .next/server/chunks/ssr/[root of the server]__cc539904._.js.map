{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/olegkiba/Desktop/Front%20course/weathercopy/src/app/%28opened%29/LandingPage/components/FetchWeather/FetchWeather.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport interface WeatherData {\n  location: {\n    name: string;\n    country: string;\n  };\n  current: {\n    temp_c: number;\n    feelslike_c: number;\n    condition: {\n      text: string;\n      icon: string;\n    };\n    humidity: number;\n    wind_kph: number;\n    pressure_mb: number;\n  };\n}\n\ninterface WeatherProps {\n  onDataLoaded: (data: WeatherData) => void;\n}\n\nconst FetchWeather = ({ onDataLoaded }: WeatherProps) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const API_KEY = '7f9080f430964821b52103358250804';\n        const response = await fetch(\n          `https://api.weatherapi.com/v1/current.json?key=${API_KEY}&q=Saint-Petersburg&lang=ru`\n        );\n\n        if (!response.ok) throw new Error('Ошибка получения данных');\n\n        const data: WeatherData = await response.json();\n        onDataLoaded(data);\n        setError(null);\n      } catch (err) {\n        setError('Не удалось получить данные о погоде');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeather();\n  }, [onDataLoaded]);\n\n  if (loading) return <div>Загрузка...</div>;\n  if (error) return <div>{error}</div>;\n  return null;\n};\n\nexport default FetchWeather;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AA0BA,MAAM,eAAe,CAAC,EAAE,YAAY,EAAgB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI;gBACF,MAAM,UAAU;gBAChB,MAAM,WAAW,MAAM,MACrB,CAAC,+CAA+C,EAAE,QAAQ,2BAA2B,CAAC;gBAGxF,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;gBAElC,MAAM,OAAoB,MAAM,SAAS,IAAI;gBAC7C,aAAa;gBACb,SAAS;YACX,EAAE,OAAO,KAAK;gBACZ,SAAS;gBACT,QAAQ,KAAK,CAAC;YAChB,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAa;IAEjB,IAAI,SAAS,qBAAO,8OAAC;kBAAI;;;;;;IACzB,IAAI,OAAO,qBAAO,8OAAC;kBAAK;;;;;;IACxB,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/olegkiba/Desktop/Front%20course/weathercopy/src/app/%28opened%29/LandingPage/components/DisplayWeather/DisplayWeather.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport Image from 'next/image';\nimport FetchWeather, {WeatherData} from '../FetchWeather/FetchWeather';\n\nconst DisplayWeather = () => {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n\n  return (\n    <div>\n      <FetchWeather onDataLoaded={(data) => setWeatherData(data)} />\n      \n      {weatherData && (\n        <div>\n          <h2>{weatherData.location.name}</h2>\n          <p>Температура: {weatherData.current.temp_c}°C</p>\n          <p>Ощущается как: {weatherData.current.feelslike_c}°C</p>\n          <Image \n            src={`https:${weatherData.current.condition.icon}`}\n            alt={weatherData.current.condition.text}\n            width={64}\n            height={64}\n            quality={80} \n            loading=\"lazy\" \n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DisplayWeather;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,iBAAiB;IACrB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAEnE,qBACE,8OAAC;;0BACC,8OAAC,sLAAA,CAAA,UAAY;gBAAC,cAAc,CAAC,OAAS,eAAe;;;;;;YAEpD,6BACC,8OAAC;;kCACC,8OAAC;kCAAI,YAAY,QAAQ,CAAC,IAAI;;;;;;kCAC9B,8OAAC;;4BAAE;4BAAc,YAAY,OAAO,CAAC,MAAM;4BAAC;;;;;;;kCAC5C,8OAAC;;4BAAE;4BAAgB,YAAY,OAAO,CAAC,WAAW;4BAAC;;;;;;;kCACnD,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK,CAAC,MAAM,EAAE,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE;wBAClD,KAAK,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI;wBACvC,OAAO;wBACP,QAAQ;wBACR,SAAS;wBACT,SAAQ;;;;;;;;;;;;;;;;;;AAMpB;uCAEe","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/olegkiba/Desktop/Front%20course/weathercopy/src/app/%28opened%29/LandingPage/LaindingPage.tsx"],"sourcesContent":["\"use client\";\n\nimport DisplayWeather from \"./components/DisplayWeather/DisplayWeather\";\n\nconst LandingPage = () => {\n\n  return (\n    <div>\n      <DisplayWeather />\n      \n    </div>\n  );\n};\n\nexport default LandingPage;\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,cAAc;IAElB,qBACE,8OAAC;kBACC,cAAA,8OAAC,0LAAA,CAAA,UAAc;;;;;;;;;;AAIrB;uCAEe","debugId":null}}]
}