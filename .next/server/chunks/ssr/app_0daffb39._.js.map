{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/DisplayWeather/DisplayWeather.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"backButton\": \"DisplayWeather-module__BN2TTG__backButton\",\n  \"container\": \"DisplayWeather-module__BN2TTG__container\",\n  \"feelsLike\": \"DisplayWeather-module__BN2TTG__feelsLike\",\n  \"forecast\": \"DisplayWeather-module__BN2TTG__forecast\",\n  \"forecastContainer\": \"DisplayWeather-module__BN2TTG__forecastContainer\",\n  \"forecastDay\": \"DisplayWeather-module__BN2TTG__forecastDay\",\n  \"temperature\": \"DisplayWeather-module__BN2TTG__temperature\",\n  \"title\": \"DisplayWeather-module__BN2TTG__title\",\n  \"weatherIcon\": \"DisplayWeather-module__BN2TTG__weatherIcon\",\n  \"weatherInfo\": \"DisplayWeather-module__BN2TTG__weatherInfo\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/olegkiba/Desktop/Front%20course/weather/app/DisplayWeather/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport Image from 'next/image';\nimport FetchWeather, { WeatherData } from '../FetchWeather/FetchWeather';\nimport styles from './DisplayWeather.module.css'; \nimport Link from 'next/link';\nimport { useSearchParams } from 'next/navigation';\n\nconst DisplayWeatherPage = () => {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const searchParams = useSearchParams();\n  const city = searchParams.get('city') || 'Санкт-Петербург';\n\n  return (\n    <div className={styles.container}>\n      <Link href={'/'}>\n        <button className={styles.backButton}>Back</button>\n      </Link>\n      \n      <FetchWeather \n        city={city}\n        onDataLoaded={(data) => setWeatherData(data)} \n      />\n      \n      {weatherData && (\n        <div>\n          <div className={styles.weatherInfo}>\n            <h2 className={styles.title}>{weatherData.location.name}, {weatherData.location.country}</h2>\n            <p><strong>Локальное время:</strong> {weatherData.location.localtime}</p>\n            <p><strong>Температура:</strong> {weatherData.current.temp_c}°C</p>\n            <p><strong>Ощущается как:</strong> {weatherData.current.feelslike_c}°C</p>\n            <p><strong>Состояние:</strong> {weatherData.current.condition.text}</p>\n            <div className={styles.weatherIcon}>\n              <Image \n                src={`https:${weatherData.current.condition.icon}`}\n                alt={weatherData.current.condition.text}\n                width={64}\n                height={64}\n                quality={80}\n                loading=\"lazy\"\n              />\n            </div>\n            <p><strong>Влажность:</strong> {weatherData.current.humidity}%</p>\n            <p><strong>Скорость ветра:</strong> {weatherData.current.wind_kph} км/ч</p>\n            <p><strong>Направление ветра:</strong> {weatherData.current.wind_dir}</p>\n            <p><strong>Давление:</strong> {weatherData.current.pressure_mb} мбар</p>\n            <p><strong>Облачность:</strong> {weatherData.current.cloud}%</p>\n            <p><strong>УФ-индекс:</strong> {weatherData.current.uv}</p>\n            <p><strong>Видимость:</strong> {weatherData.current.vis_km} км</p>\n          </div>\n\n          <div className={styles.forecastContainer}>\n            <h3>Прогноз на 7 дней:</h3>\n            <div className={styles.forecast}>\n              {weatherData.forecast.forecastday.map((day) => {\n                // Преобразование даты в нужный формат\n                const date = new Date(day.date);\n                const daysOfWeekShort = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\n                const months = [\n                  'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\n                  'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\n                ];\n                const dayOfWeek = daysOfWeekShort[date.getDay()];\n                const dayOfMonth = date.getDate();\n                const month = months[date.getMonth()];\n\n                return (\n                  <div key={day.date} className={styles.forecastDay}>\n                    <h4 className={styles.data}>{dayOfWeek}, {dayOfMonth} {month}</h4>\n                    <p><strong>Температура:</strong><br />{day.day.mintemp_c}°C - {day.day.maxtemp_c}°C</p>\n                    <div className={styles.weatherIcon}>\n                      <Image \n                        src={`https:${day.day.condition.icon}`}\n                        alt={day.day.condition.text}\n                        width={64}\n                        height={64}\n                        quality={80}\n                        loading=\"lazy\"\n                      />\n                    </div>\n                    <p>{day.day.condition.text}</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DisplayWeatherPage;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AASA,MAAM,qBAAqB;IACzB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IACnE,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,OAAO,aAAa,GAAG,CAAC,WAAW;IAEzC,qBACE,8OAAC;QAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,SAAS;;0BAC9B,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAM;0BACV,cAAA,8OAAC;oBAAO,WAAW,mJAAA,CAAA,UAAM,CAAC,UAAU;8BAAE;;;;;;;;;;;0BAGxC,8OAAC,oIAAA,CAAA,UAAY;gBACX,MAAM;gBACN,cAAc,CAAC,OAAS,eAAe;;;;;;YAGxC,6BACC,8OAAC;;kCACC,8OAAC;wBAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,WAAW;;0CAChC,8OAAC;gCAAG,WAAW,mJAAA,CAAA,UAAM,CAAC,KAAK;;oCAAG,YAAY,QAAQ,CAAC,IAAI;oCAAC;oCAAG,YAAY,QAAQ,CAAC,OAAO;;;;;;;0CACvF,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAyB;oCAAE,YAAY,QAAQ,CAAC,SAAS;;;;;;;0CACpE,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAqB;oCAAE,YAAY,OAAO,CAAC,MAAM;oCAAC;;;;;;;0CAC7D,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAuB;oCAAE,YAAY,OAAO,CAAC,WAAW;oCAAC;;;;;;;0CACpE,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI;;;;;;;0CAClE,8OAAC;gCAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAK,CAAC,MAAM,EAAE,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE;oCAClD,KAAK,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI;oCACvC,OAAO;oCACP,QAAQ;oCACR,SAAS;oCACT,SAAQ;;;;;;;;;;;0CAGZ,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,QAAQ;oCAAC;;;;;;;0CAC7D,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAwB;oCAAE,YAAY,OAAO,CAAC,QAAQ;oCAAC;;;;;;;0CAClE,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAA2B;oCAAE,YAAY,OAAO,CAAC,QAAQ;;;;;;;0CACpE,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAkB;oCAAE,YAAY,OAAO,CAAC,WAAW;oCAAC;;;;;;;0CAC/D,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAoB;oCAAE,YAAY,OAAO,CAAC,KAAK;oCAAC;;;;;;;0CAC3D,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,EAAE;;;;;;;0CACtD,8OAAC;;kDAAE,8OAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,MAAM;oCAAC;;;;;;;;;;;;;kCAG7D,8OAAC;wBAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,iBAAiB;;0CACtC,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;gCAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,QAAQ;0CAC5B,YAAY,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oCACrC,sCAAsC;oCACtC,MAAM,OAAO,IAAI,KAAK,IAAI,IAAI;oCAC9B,MAAM,kBAAkB;wCAAC;wCAAM;wCAAM;wCAAM;wCAAM;wCAAM;wCAAM;qCAAK;oCAClE,MAAM,SAAS;wCACb;wCAAU;wCAAW;wCAAS;wCAAU;wCAAO;wCAC/C;wCAAQ;wCAAW;wCAAY;wCAAW;wCAAU;qCACrD;oCACD,MAAM,YAAY,eAAe,CAAC,KAAK,MAAM,GAAG;oCAChD,MAAM,aAAa,KAAK,OAAO;oCAC/B,MAAM,QAAQ,MAAM,CAAC,KAAK,QAAQ,GAAG;oCAErC,qBACE,8OAAC;wCAAmB,WAAW,mJAAA,CAAA,UAAM,CAAC,WAAW;;0DAC/C,8OAAC;gDAAG,WAAW,mJAAA,CAAA,UAAM,CAAC,IAAI;;oDAAG;oDAAU;oDAAG;oDAAW;oDAAE;;;;;;;0DACvD,8OAAC;;kEAAE,8OAAC;kEAAO;;;;;;kEAAqB,8OAAC;;;;;oDAAM,IAAI,GAAG,CAAC,SAAS;oDAAC;oDAAM,IAAI,GAAG,CAAC,SAAS;oDAAC;;;;;;;0DACjF,8OAAC;gDAAI,WAAW,mJAAA,CAAA,UAAM,CAAC,WAAW;0DAChC,cAAA,8OAAC,6HAAA,CAAA,UAAK;oDACJ,KAAK,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE;oDACtC,KAAK,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI;oDAC3B,OAAO;oDACP,QAAQ;oDACR,SAAS;oDACT,SAAQ;;;;;;;;;;;0DAGZ,8OAAC;0DAAG,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI;;;;;;;uCAblB,IAAI,IAAI;;;;;gCAgBtB;;;;;;;;;;;;;;;;;;;;;;;;AAOd;uCAEe","debugId":null}}]
}