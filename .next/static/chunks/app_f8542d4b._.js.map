{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/FetchWeather/FetchWeather.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"loader\": \"FetchWeather-module__C0SLva__loader\",\n  \"loaderContainer\": \"FetchWeather-module__C0SLva__loaderContainer\",\n  \"spin\": \"FetchWeather-module__C0SLva__spin\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///Users/olegkiba/Desktop/Front%20course/weather/app/FetchWeather/FetchWeather.tsx"],"sourcesContent":["\"use client\";\nimport styles from './FetchWeather.module.css';\n\nimport { useState, useEffect } from 'react';\n\nexport interface WeatherData {\n  location: {\n    name: string;\n    country: string;\n    localtime: string;\n  };\n  current: {\n    temp_c: number;\n    feelslike_c: number;\n    condition: {\n      text: string;\n      icon: string;\n    };\n    humidity: number;\n    wind_kph: number;\n    pressure_mb: number;\n    cloud: number;\n    uv: number;\n    vis_km: number;\n    wind_dir: string;\n  };\n  forecast: {\n    forecastday: Array<{\n      date: string;\n      day: {\n        maxtemp_c: number;\n        mintemp_c: number;\n        avgtemp_c: number;\n        condition: {\n          text: string;\n          icon: string;\n        };\n        uv: number;\n      };\n    }>;\n  };\n}\n\ninterface WeatherProps {\n  city: string;\n  onDataLoaded: (data: WeatherData) => void;\n}\n\nconst FetchWeather = ({ city, onDataLoaded }: WeatherProps) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const API_KEY = '7f9080f430964821b52103358250804';\n        const response = await fetch(\n          `https://api.weatherapi.com/v1/forecast.json?key=${API_KEY}&q=${encodeURIComponent(city)}&days=7&lang=ru`\n        );\n\n        if (!response.ok) throw new Error('Ошибка получения данных');\n\n        const data: WeatherData = await response.json();\n        onDataLoaded(data);\n        setError(null);\n      } catch (err) {\n        setError(`Не удалось получить данные о погоде для города ${city}`);\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeather();\n  }, [city, onDataLoaded]);\n\n  if (loading) {\n    return (\n      <div className={styles.loaderContainer}>\n        <div className={styles.loader}></div>\n      </div>\n    );\n  }\n  if (error) return <div>{error}</div>;\n  return null;\n};\n\nexport default FetchWeather;"],"names":[],"mappings":";;;;AACA;AAEA;;;AAHA;;;AAgDA,MAAM,eAAe,CAAC,EAAE,IAAI,EAAE,YAAY,EAAgB;;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM;uDAAe;oBACnB,IAAI;wBACF,MAAM,UAAU;wBAChB,MAAM,WAAW,MAAM,MACrB,CAAC,gDAAgD,EAAE,QAAQ,GAAG,EAAE,mBAAmB,MAAM,eAAe,CAAC;wBAG3G,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;wBAElC,MAAM,OAAoB,MAAM,SAAS,IAAI;wBAC7C,aAAa;wBACb,SAAS;oBACX,EAAE,OAAO,KAAK;wBACZ,SAAS,CAAC,+CAA+C,EAAE,MAAM;wBACjE,QAAQ,KAAK,CAAC;oBAChB,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;iCAAG;QAAC;QAAM;KAAa;IAEvB,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAW,kJAAA,CAAA,UAAM,CAAC,eAAe;sBACpC,cAAA,6LAAC;gBAAI,WAAW,kJAAA,CAAA,UAAM,CAAC,MAAM;;;;;;;;;;;IAGnC;IACA,IAAI,OAAO,qBAAO,6LAAC;kBAAK;;;;;;IACxB,OAAO;AACT;GArCM;KAAA;uCAuCS","debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/DisplayWeather/DisplayWeather.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"backButton\": \"DisplayWeather-module__BN2TTG__backButton\",\n  \"container\": \"DisplayWeather-module__BN2TTG__container\",\n  \"feelsLike\": \"DisplayWeather-module__BN2TTG__feelsLike\",\n  \"forecast\": \"DisplayWeather-module__BN2TTG__forecast\",\n  \"forecastContainer\": \"DisplayWeather-module__BN2TTG__forecastContainer\",\n  \"forecastDay\": \"DisplayWeather-module__BN2TTG__forecastDay\",\n  \"temperature\": \"DisplayWeather-module__BN2TTG__temperature\",\n  \"title\": \"DisplayWeather-module__BN2TTG__title\",\n  \"weatherIcon\": \"DisplayWeather-module__BN2TTG__weatherIcon\",\n  \"weatherInfo\": \"DisplayWeather-module__BN2TTG__weatherInfo\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/olegkiba/Desktop/Front%20course/weather/app/DisplayWeather/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Suspense, useState } from 'react';\nimport Image from 'next/image';\nimport FetchWeather, { WeatherData } from '../FetchWeather/FetchWeather';\nimport styles from './DisplayWeather.module.css'; \nimport Link from 'next/link';\nimport { useSearchParams } from 'next/navigation';\n\nconst DisplayWeatherPage = () => {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const searchParams = useSearchParams();\n  const city = searchParams.get('city') ?? 'Санкт-Петербург';\n\n  return (\n    <div className={styles.container}>\n      <Link href={'/'}>\n        <button className={styles.backButton}>Back</button>\n      </Link>\n      \n      <FetchWeather \n        city={city}\n        onDataLoaded={(data) => setWeatherData(data)} \n      />\n      \n      {weatherData && (\n        <div>\n          <div className={styles.weatherInfo}>\n            <h2 className={styles.title}>{weatherData.location.name}, {weatherData.location.country}</h2>\n            <p><strong>Локальное время:</strong> {weatherData.location.localtime}</p>\n            <p><strong>Температура:</strong> {weatherData.current.temp_c}°C</p>\n            <p><strong>Ощущается как:</strong> {weatherData.current.feelslike_c}°C</p>\n            <p><strong>Состояние:</strong> {weatherData.current.condition.text}</p>\n            <div className={styles.weatherIcon}>\n              <Image \n                src={`https:${weatherData.current.condition.icon}`}\n                alt={weatherData.current.condition.text}\n                width={64}\n                height={64}\n                quality={80}\n                loading=\"lazy\"\n              />\n            </div>\n            <p><strong>Влажность:</strong> {weatherData.current.humidity}%</p>\n            <p><strong>Скорость ветра:</strong> {weatherData.current.wind_kph} км/ч</p>\n            <p><strong>Направление ветра:</strong> {weatherData.current.wind_dir}</p>\n            <p><strong>Давление:</strong> {weatherData.current.pressure_mb} мбар</p>\n            <p><strong>Облачность:</strong> {weatherData.current.cloud}%</p>\n            <p><strong>УФ-индекс:</strong> {weatherData.current.uv}</p>\n            <p><strong>Видимость:</strong> {weatherData.current.vis_km} км</p>\n          </div>\n\n          <div className={styles.forecastContainer}>\n            <h3>Прогноз на 7 дней:</h3>\n            <div className={styles.forecast}>\n              {weatherData.forecast.forecastday.map((day) => {\n                // Преобразование даты в нужный формат\n                const date = new Date(day.date);\n                const daysOfWeekShort = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\n                const months = [\n                  'января', 'февраля', 'марта', 'апреля', 'мая', 'июня',\n                  'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'\n                ];\n                const dayOfWeek = daysOfWeekShort[date.getDay()];\n                const dayOfMonth = date.getDate();\n                const month = months[date.getMonth()];\n\n                return (\n                  <div key={day.date} className={styles.forecastDay}>\n                    <h4 className={styles.data}>{dayOfWeek}, {dayOfMonth} {month}</h4>\n                    <p><strong>Температура:</strong><br />{day.day.mintemp_c}°C - {day.day.maxtemp_c}°C</p>\n                    <div className={styles.weatherIcon}>\n                      <Image \n                        src={`https:${day.day.condition.icon}`}\n                        alt={day.day.condition.text}\n                        width={64}\n                        height={64}\n                        quality={80}\n                        loading=\"lazy\"\n                      />\n                    </div>\n                    <p>{day.day.condition.text}</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default function Page() {\n  return (\n    <Suspense fallback={<div>Загрузка...</div>}>\n      <DisplayWeatherPage />\n    </Suspense>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASA,MAAM,qBAAqB;;IACzB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACnE,MAAM,eAAe,CAAA,GAAA,qIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,OAAO,aAAa,GAAG,CAAC,WAAW;IAEzC,qBACE,6LAAC;QAAI,WAAW,sJAAA,CAAA,UAAM,CAAC,SAAS;;0BAC9B,6LAAC,+JAAA,CAAA,UAAI;gBAAC,MAAM;0BACV,cAAA,6LAAC;oBAAO,WAAW,sJAAA,CAAA,UAAM,CAAC,UAAU;8BAAE;;;;;;;;;;;0BAGxC,6LAAC,uIAAA,CAAA,UAAY;gBACX,MAAM;gBACN,cAAc,CAAC,OAAS,eAAe;;;;;;YAGxC,6BACC,6LAAC;;kCACC,6LAAC;wBAAI,WAAW,sJAAA,CAAA,UAAM,CAAC,WAAW;;0CAChC,6LAAC;gCAAG,WAAW,sJAAA,CAAA,UAAM,CAAC,KAAK;;oCAAG,YAAY,QAAQ,CAAC,IAAI;oCAAC;oCAAG,YAAY,QAAQ,CAAC,OAAO;;;;;;;0CACvF,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAyB;oCAAE,YAAY,QAAQ,CAAC,SAAS;;;;;;;0CACpE,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAqB;oCAAE,YAAY,OAAO,CAAC,MAAM;oCAAC;;;;;;;0CAC7D,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAuB;oCAAE,YAAY,OAAO,CAAC,WAAW;oCAAC;;;;;;;0CACpE,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI;;;;;;;0CAClE,6LAAC;gCAAI,WAAW,sJAAA,CAAA,UAAM,CAAC,WAAW;0CAChC,cAAA,6LAAC,gIAAA,CAAA,UAAK;oCACJ,KAAK,CAAC,MAAM,EAAE,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE;oCAClD,KAAK,YAAY,OAAO,CAAC,SAAS,CAAC,IAAI;oCACvC,OAAO;oCACP,QAAQ;oCACR,SAAS;oCACT,SAAQ;;;;;;;;;;;0CAGZ,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,QAAQ;oCAAC;;;;;;;0CAC7D,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAwB;oCAAE,YAAY,OAAO,CAAC,QAAQ;oCAAC;;;;;;;0CAClE,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAA2B;oCAAE,YAAY,OAAO,CAAC,QAAQ;;;;;;;0CACpE,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAkB;oCAAE,YAAY,OAAO,CAAC,WAAW;oCAAC;;;;;;;0CAC/D,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAoB;oCAAE,YAAY,OAAO,CAAC,KAAK;oCAAC;;;;;;;0CAC3D,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,EAAE;;;;;;;0CACtD,6LAAC;;kDAAE,6LAAC;kDAAO;;;;;;oCAAmB;oCAAE,YAAY,OAAO,CAAC,MAAM;oCAAC;;;;;;;;;;;;;kCAG7D,6LAAC;wBAAI,WAAW,sJAAA,CAAA,UAAM,CAAC,iBAAiB;;0CACtC,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;gCAAI,WAAW,sJAAA,CAAA,UAAM,CAAC,QAAQ;0CAC5B,YAAY,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;oCACrC,sCAAsC;oCACtC,MAAM,OAAO,IAAI,KAAK,IAAI,IAAI;oCAC9B,MAAM,kBAAkB;wCAAC;wCAAM;wCAAM;wCAAM;wCAAM;wCAAM;wCAAM;qCAAK;oCAClE,MAAM,SAAS;wCACb;wCAAU;wCAAW;wCAAS;wCAAU;wCAAO;wCAC/C;wCAAQ;wCAAW;wCAAY;wCAAW;wCAAU;qCACrD;oCACD,MAAM,YAAY,eAAe,CAAC,KAAK,MAAM,GAAG;oCAChD,MAAM,aAAa,KAAK,OAAO;oCAC/B,MAAM,QAAQ,MAAM,CAAC,KAAK,QAAQ,GAAG;oCAErC,qBACE,6LAAC;wCAAmB,WAAW,sJAAA,CAAA,UAAM,CAAC,WAAW;;0DAC/C,6LAAC;gDAAG,WAAW,sJAAA,CAAA,UAAM,CAAC,IAAI;;oDAAG;oDAAU;oDAAG;oDAAW;oDAAE;;;;;;;0DACvD,6LAAC;;kEAAE,6LAAC;kEAAO;;;;;;kEAAqB,6LAAC;;;;;oDAAM,IAAI,GAAG,CAAC,SAAS;oDAAC;oDAAM,IAAI,GAAG,CAAC,SAAS;oDAAC;;;;;;;0DACjF,6LAAC;gDAAI,WAAW,sJAAA,CAAA,UAAM,CAAC,WAAW;0DAChC,cAAA,6LAAC,gIAAA,CAAA,UAAK;oDACJ,KAAK,CAAC,MAAM,EAAE,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE;oDACtC,KAAK,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI;oDAC3B,OAAO;oDACP,QAAQ;oDACR,SAAS;oDACT,SAAQ;;;;;;;;;;;0DAGZ,6LAAC;0DAAG,IAAI,GAAG,CAAC,SAAS,CAAC,IAAI;;;;;;;uCAblB,IAAI,IAAI;;;;;gCAgBtB;;;;;;;;;;;;;;;;;;;;;;;;AAOd;GAlFM;;QAEiB,qIAAA,CAAA,kBAAe;;;KAFhC;AAoFS,SAAS;IACtB,qBACE,6LAAC,6JAAA,CAAA,WAAQ;QAAC,wBAAU,6LAAC;sBAAI;;;;;;kBACvB,cAAA,6LAAC;;;;;;;;;;AAGP;MANwB","debugId":null}}]
}